name: Build, Test and Deploy Angular Application (Front)

on:
  push:
    branches: [main]

jobs:
  deploy_backend:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm install
        working-directory: back
      - name: Deploy to Vercel
        run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
        working-directory: back

  test:
    name: Run tests and collect coverage (Front)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4

      - name: Navigate to Frontend Directory
        run: cd front

      - name: Install dependencies
        run: npm install
        working-directory: front

      - name: Run tests
        run: npx jest --coverage
        working-directory: front

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
    needs: deploy_backend

  build_test:
    name: Build, Test and Generate Documentation (Front)
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies, build, test, and generate docs
        run: |
          npm ci
          npm run build --if-present
          npm run test:coverage
          npm run doc
        working-directory: front

      - name: Prepare deployment folder
        run: |
          mkdir -p deploy-root
          cp -r front/dist/cours-1-1/browser/* deploy-root/
          cp -r front/docs deploy-root/docs

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: deploy-root
          if-no-files-found: error
    needs: deploy_backend

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{steps.deployment.output.page_url}}
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    needs: build_test
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
